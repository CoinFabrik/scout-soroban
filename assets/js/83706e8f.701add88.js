"use strict";(self.webpackChunkscout=self.webpackChunkscout||[]).push([[9598],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,v=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(v,i(i({ref:t},u),{},{components:n})):r.createElement(v,i({ref:t},u))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3254:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(2564),o=(n(9496),n(9613));const a={},i="Panic error",c={unversionedId:"detectors/avoid-panic-error",id:"detectors/avoid-panic-error",title:"Panic error",description:"What it does",source:"@site/docs/detectors/9-avoid-panic-error.md",sourceDirName:"detectors",slug:"/detectors/avoid-panic-error",permalink:"/scout-soroban/docs/detectors/avoid-panic-error",draft:!1,editUrl:"https://github.com/CoinFabrik/scout-soroban/docs/detectors/9-avoid-panic-error.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Set contract storage",permalink:"/scout-soroban/docs/detectors/set-contract-storage"},next:{title:"Avoid unsafe block",permalink:"/scout-soroban/docs/detectors/avoid-unsafe-block"}},s={},l=[{value:"What it does",id:"what-it-does",level:3},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"Known problems",id:"known-problems",level:3},{value:"Example",id:"example",level:3},{value:"Implementation",id:"implementation",level:3}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"panic-error"},"Panic error"),(0,o.kt)("h3",{id:"what-it-does"},"What it does"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"panic!")," macro is used to stop execution when a condition is not met.\nThis is useful for testing and prototyping, but should be avoided in production code."),(0,o.kt)("h3",{id:"why-is-this-bad"},"Why is this bad?"),(0,o.kt)("p",null,"The usage of ",(0,o.kt)("inlineCode",{parentName:"p"},"panic!")," is not recommended because it will stop the execution of the caller contract."),(0,o.kt)("h3",{id:"known-problems"},"Known problems"),(0,o.kt)("p",null,"While this linter detects explicit calls to ",(0,o.kt)("inlineCode",{parentName:"p"},"panic!"),", there are some ways to raise a panic such as ",(0,o.kt)("inlineCode",{parentName:"p"},"unwrap()")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"expect()"),"."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'pub fn add(env: Env, value: u32) -> u32 {\n    let storage = env.storage().instance();\n    let mut count: u32 = storage.get(&COUNTER).unwrap_or(0);\n    match count.checked_add(value) {\n        Some(value) => count = value,\n        None => panic!("Overflow error"),\n    }\n    storage.set(&COUNTER, &count);\n    storage.extend_ttl(100, 100);\n    count\n}\n')),(0,o.kt)("p",null,"Use instead:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn add(env: Env, value: u32) -> Result<u32, Error> {\n    let storage = env.storage().instance();\n    let mut count: u32 = storage.get(&COUNTER).unwrap_or(0);\n    match count.checked_add(value) {\n        Some(value) => count = value,\n        None => return Err(Error::OverflowError),\n    }\n    storage.set(&COUNTER, &count);\n    storage.extend_ttl(100, 100);\n    Ok(count)\n}\n")),(0,o.kt)("h3",{id:"implementation"},"Implementation"),(0,o.kt)("p",null,"The detector's implementation can be found at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/detectors/avoid-panic-error"},"this link"),"."))}d.isMDXComponent=!0}}]);