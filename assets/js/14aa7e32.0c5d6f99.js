"use strict";(self.webpackChunkscout=self.webpackChunkscout||[]).push([[5897],{9613:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>h});var o=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),u=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=u(e.components);return o.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(c,".").concat(m)]||p[m]||d[m]||i;return n?o.createElement(h,a(a({ref:t},l),{},{components:n})):o.createElement(h,a({ref:t},l))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:r,a[1]=s;for(var u=2;u<i;u++)a[u]=n[u];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2150:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var o=n(2564),r=(n(9496),n(9613));const i={sidebar_position:7},a="Scout GitHub Action",s={unversionedId:"github-action",id:"github-action",title:"Scout GitHub Action",description:"At CoinFabrik, we understand the importance of ensuring code quality and security in every step of the development process. That's why we've developed a GitHub action to integrate Scout into the CI/CD pipeline.",source:"@site/docs/github-action.md",sourceDirName:".",slug:"/github-action",permalink:"/scout-soroban/docs/github-action",draft:!1,editUrl:"https://github.com/CoinFabrik/scout-soroban/docs/github-action.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docsSidebar",previous:{title:"Scout Bug Fighter for Soroban: Improving Tool's Precision",permalink:"/scout-soroban/docs/precision-and-recall/first-iteration"}},c={},u=[{value:"Quick Start",id:"quick-start",level:2},{value:"Considerations",id:"considerations",level:2},{value:"Output Example",id:"output-example",level:2}],l={toc:u},p="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(p,(0,o.Z)({},l,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"scout-github-action"},"Scout GitHub Action"),(0,r.kt)("p",null,"At CoinFabrik, we understand the importance of ensuring code quality and security in every step of the development process. That's why we've developed a GitHub action to integrate Scout into the CI/CD pipeline."),(0,r.kt)("p",null,"Scout is triggered upon every commit pushed to a pull request, automatically running the tool against the targeted smart contracts. This immediate feedback loop allows developers to quickly address any issues before merging the code into the main branch, reducing the risk of introducing bugs or vulnerabilities."),(0,r.kt)("h2",{id:"quick-start"},"Quick Start"),(0,r.kt)("p",null,"To integrate Scout into your CI/CD pipeline, simply add the following ",(0,r.kt)("inlineCode",{parentName:"p"},"scout.yml")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},".github/workflows")," directory in your repo."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},'name: scout-workflow\non: [push]\n\njobs:\n  nuevo-test:\n    runs-on: ubuntu-latest\n    permissions:\n      pull-requests: write\n      contents: write\n      repository-projects: write\n    steps:\n      - name: checkout\n        uses: actions/checkout@v2\n\n      - name: do scout\n        uses: coinfabrik/scout-actions@v2.4\n        with:\n          target: # Path to the root of your smart contract (e.g. contracts/token/)\n          markdown_output: "true"\n\n      - uses: mshick/add-pr-comment@v2.8.2\n        with:\n          message-path:  ${{ github.workspace }}/report.md\n')),(0,r.kt)("h2",{id:"considerations"},"Considerations"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Make sure that your smart contract compiles correctly. Scout will not run if any compilation errors exist."),(0,r.kt)("li",{parentName:"ol"},"Check that ",(0,r.kt)("inlineCode",{parentName:"li"},"target")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"scout.yml")," is set to the root of the smart contract (where the ",(0,r.kt)("inlineCode",{parentName:"li"},"Cargo.toml")," file is)."),(0,r.kt)("li",{parentName:"ol"},"To properly see Scout's results, make sure that you have an open pull request to which you are committing your changes, as Scout's results will be shown as a comment in the PR.")),(0,r.kt)("h2",{id:"output-example"},"Output Example"),(0,r.kt)("p",null,"Scout results are display as a comment in the pull request."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Scout Action output example.",src:n(1519).Z,width:"897",height:"1015"})))}d.isMDXComponent=!0},1519:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/github-action-output-2003564ac2fa6385cd6a043f45a75ae0.jpg"}}]);