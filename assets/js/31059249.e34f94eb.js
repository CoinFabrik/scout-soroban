"use strict";(self.webpackChunkscout=self.webpackChunkscout||[]).push([[4307],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var o=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),l=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,b=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return n?o.createElement(b,a(a({ref:t},c),{},{components:n})):o.createElement(b,a({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[d]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8836:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=n(2564),r=(n(9496),n(9613));const i={},a="DoS unbounded operation",s={unversionedId:"detectors/dos-unbounded-operation",id:"detectors/dos-unbounded-operation",title:"DoS unbounded operation",description:"What it does",source:"@site/docs/detectors/11-dos-unbounded-operation.md",sourceDirName:"detectors",slug:"/detectors/dos-unbounded-operation",permalink:"/scout-soroban/docs/detectors/dos-unbounded-operation",draft:!1,editUrl:"https://github.com/CoinFabrik/scout-soroban/docs/detectors/11-dos-unbounded-operation.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Avoid unsafe block",permalink:"/scout-soroban/docs/detectors/avoid-unsafe-block"},next:{title:"Soroban version",permalink:"/scout-soroban/docs/detectors/soroban-version"}},u={},l=[{value:"What it does",id:"what-it-does",level:3},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"Known problems",id:"known-problems",level:3},{value:"Example",id:"example",level:3},{value:"Implementation",id:"implementation",level:3}],c={toc:l},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"dos-unbounded-operation"},"DoS unbounded operation"),(0,r.kt)("h3",{id:"what-it-does"},"What it does"),(0,r.kt)("p",null,"This detector checks that when using for or while loops, their conditions limit the execution to a constant number of iterations."),(0,r.kt)("h3",{id:"why-is-this-bad"},"Why is this bad?"),(0,r.kt)("p",null,"If the number of iterations is not limited to a specific range, it could potentially cause out of gas exceptions."),(0,r.kt)("h3",{id:"known-problems"},"Known problems"),(0,r.kt)("p",null,"False positives are to be expected when using variables that can only be set using controlled flows that limit the values within acceptable ranges."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"pub fn unrestricted_loop(for_loop_count: u64) -> u64 {\n    let mut count = 0;\n    for i in 0..for_loop_count {\n        count += i;\n    }\n    count\n}\n")),(0,r.kt)("p",null,"Use instead:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rust"},"const FIXED_COUNT: u64 = 1000;\n\npub fn restricted_loop_with_const() -> u64 {\n    let mut sum = 0;\n    for i in 0..FIXED_COUNT {\n        sum += i;\n    }\n    sum\n}\n")),(0,r.kt)("h3",{id:"implementation"},"Implementation"),(0,r.kt)("p",null,"The detector's implementation can be found at ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/detectors/dos-unbounded-operation"},"this link"),"."))}p.isMDXComponent=!0}}]);