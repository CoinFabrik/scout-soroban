name: Test Detectors

on:
  push:
    branches:
      - "main"
    paths:
      - "detectors/**"
      - "test-cases/**"
      - "Makefile"
  pull_request:
    paths:
      - "detectors/**"
      - "test-cases/**"
      - "Makefile"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build:
    name: Build
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache cargo-scout dependencies
        id: cache-cargo-scout-dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-scout-dependencies-${{ github.run_id }}

      - name: Update Rust Toolchain
        run: rustup update

      - name: Install Rust nightly
        run: rustup install nightly --profile minimal

      - name: Install dylint and dylint-link
        run: cargo +nightly install cargo-dylint dylint-link

      - name: Install cargo-scout-audit
        run: cargo +nightly install cargo-scout-audit

  prepare-test-matrix:
    name: Prepare Test Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: set-matrix
        run: |
          echo "::set-output name=matrix::$(find test-cases -mindepth 1 -maxdepth 1 -type d -printf '"%f", ' | sed 's/, $//')"

  integration-tests:
    name: Integration Tests
    needs: [build, prepare-test-matrix]
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        test-case: ${{fromJson(needs.prepare-test-matrix.outputs.matrix)}}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          fail-on-cache-miss: true

      - name: Run integration test for a specific test case
        run: |
          cd ${{ matrix.test-case }}
          cargo test
