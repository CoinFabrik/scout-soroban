"use strict";(self.webpackChunkscout=self.webpackChunkscout||[]).push([[143],{9613:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>b});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),l=s(n),m=a,b=l["".concat(u,".").concat(m)]||l[m]||d[m]||o;return n?r.createElement(b,c(c({ref:t},p),{},{components:n})):r.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[l]="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2873:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(2564),a=(n(9496),n(9613));const o={},c="Unprotected update current contract wasm",i={unversionedId:"vulnerabilities/unprotected-update-current-contract-wasm",id:"vulnerabilities/unprotected-update-current-contract-wasm",title:"Unprotected update current contract wasm",description:"Description",source:"@site/docs/vulnerabilities/6-unprotected-update-current-contract-wasm.md",sourceDirName:"vulnerabilities",slug:"/vulnerabilities/unprotected-update-current-contract-wasm",permalink:"/scout-soroban/docs/vulnerabilities/unprotected-update-current-contract-wasm",draft:!1,editUrl:"https://github.com/CoinFabrik/scout-soroban/docs/vulnerabilities/6-unprotected-update-current-contract-wasm.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Unprotected update current contract wasm",permalink:"/scout-soroban/docs/vulnerabilities/unprotected-update-current-contract-wasm (copy)"},next:{title:"Avoid core::mem::forget usage",permalink:"/scout-soroban/docs/vulnerabilities/avoid-core-mem-forget"}},u={},s=[{value:"Description",id:"description",level:2},{value:"Exploit Scenario",id:"exploit-scenario",level:2},{value:"Remediation",id:"remediation",level:2}],p={toc:s},l="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(l,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"unprotected-update-current-contract-wasm"},"Unprotected update current contract wasm"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Vulnerability Category: ",(0,a.kt)("inlineCode",{parentName:"li"},"Authorization")),(0,a.kt)("li",{parentName:"ul"},"Vulnerability Severity: ",(0,a.kt)("inlineCode",{parentName:"li"},"Critical")),(0,a.kt)("li",{parentName:"ul"},"Detectors: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/detectors/unprotected-update-current-contract-wasm"},(0,a.kt)("inlineCode",{parentName:"a"},"unprotected-update-current-contract-wasm"))),(0,a.kt)("li",{parentName:"ul"},"Test Cases: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-1"},(0,a.kt)("inlineCode",{parentName:"a"},"unprotected-update-current-contract-wasm-1"))," ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-2"},(0,a.kt)("inlineCode",{parentName:"a"},"unprotected-update-current-contract-wasm-2")))),(0,a.kt)("p",null,"It warns you if ",(0,a.kt)("inlineCode",{parentName:"p"},"update_current_contract_wasm()")," function is called without a previous check of the address of the caller. If users are allowed to call ",(0,a.kt)("inlineCode",{parentName:"p"},"update_current_contract_wasm()"),", they can intentionally modify the contract behaviour, leading to the loss of all associated data/tokens and functionalities given by this contract or by others that depend on it."),(0,a.kt)("h2",{id:"exploit-scenario"},"Exploit Scenario"),(0,a.kt)("p",null,"Consider the following ",(0,a.kt)("inlineCode",{parentName:"p"},"Soroban")," contract:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"#[contractimpl]\nimpl UpgradeableContract {\n    pub fn init(e: Env, admin: Address) {\n        e.storage().instance().set(&DataKey::Admin, &admin);\n    }\n\n    pub fn version() -> u32 {\n        1\n    }\n\n    pub fn upgrade(e: Env, new_wasm_hash: BytesN<32>) {\n        e.deployer().update_current_contract_wasm(new_wasm_hash);\n    }\n}\n")),(0,a.kt)("p",null,"This contract allows upgrades through the ",(0,a.kt)("inlineCode",{parentName:"p"},"update_current_contract_wasm")," function. If just anyone can call this function, they could modify the contract behaviour."),(0,a.kt)("p",null,"The vulnerable code example can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-1/vulnerable-example"},(0,a.kt)("inlineCode",{parentName:"a"},"here")),"."),(0,a.kt)("h2",{id:"remediation"},"Remediation"),(0,a.kt)("p",null,"To prevent this, the function should be restricted to administrators or authorized users only."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"#[contractimpl]\nimpl UpgradeableContract {\n    pub fn init(e: Env, admin: Address) {\n        e.storage().instance().set(&DataKey::Admin, &admin);\n    }\n\n    pub fn version() -> u32 {\n        1\n    }\n\n    pub fn upgrade(e: Env, new_wasm_hash: BytesN<32>) {\n        let admin: Address = e.storage().instance().get(&DataKey::Admin).unwrap();\n        admin.require_auth();\n\n        e.deployer().update_current_contract_wasm(new_wasm_hash);\n    }\n}\n")),(0,a.kt)("p",null,"The remediated code example can be found ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-1/remediated-example"},(0,a.kt)("inlineCode",{parentName:"a"},"here")),"."))}d.isMDXComponent=!0}}]);