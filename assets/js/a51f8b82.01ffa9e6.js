"use strict";(self.webpackChunkscout=self.webpackChunkscout||[]).push([[1098],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(2564),a=(n(9496),n(9613));const o={},l="Insuficciently random values",i={unversionedId:"detectors/insufficiently-random-values",id:"detectors/insufficiently-random-values",title:"Insuficciently random values",description:"What it does",source:"@site/docs/detectors/5-insufficiently-random-values.md",sourceDirName:"detectors",slug:"/detectors/insufficiently-random-values",permalink:"/scout-soroban/docs/detectors/insufficiently-random-values",draft:!1,editUrl:"https://github.com/CoinFabrik/scout-soroban/docs/detectors/5-insufficiently-random-values.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Overflow-check",permalink:"/scout-soroban/docs/detectors/overflow-check"},next:{title:"Unprotected update of current contract wasm",permalink:"/scout-soroban/docs/detectors/unprotected-update-current-contract-wasm"}},c={},s=[{value:"What it does",id:"what-it-does",level:3},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"Example",id:"example",level:3},{value:"Implementation",id:"implementation",level:3}],u={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"insuficciently-random-values"},"Insuficciently random values"),(0,a.kt)("h3",{id:"what-it-does"},"What it does"),(0,a.kt)("p",null,"Checks the usage of ",(0,a.kt)("inlineCode",{parentName:"p"},"ledger().timestamp()")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"ledger().sequence()")," for generation of random numbers."),(0,a.kt)("h3",{id:"why-is-this-bad"},"Why is this bad?"),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"ledger().timestamp()")," is not recommended because it could be potentially manipulated by validator. On the other hand, ",(0,a.kt)("inlineCode",{parentName:"p"},"ledger().sequence()")," is publicly available, an attacker could predict the random number to be generated."),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"#[contractimpl]\nimpl Contract {\n    pub fn generate_random_value_timestamp(env: Env, max_val: u64) -> Result<u64, Error> {\n        if max_val == 0 {\n            Err(Error::MaxValZero)\n        } else {\n            let val = env.ledger().timestamp() % max_val;\n            Ok(val)\n        }\n    }\n    pub fn generate_random_value_sequence(env: Env, max_val: u32) -> Result<u32, Error> {\n        if max_val == 0 {\n            Err(Error::MaxValZero)\n        } else {\n            let val = env.ledger().sequence() % max_val;\n            Ok(val)\n        }\n    }\n}\n")),(0,a.kt)("p",null,"Use instead:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"#[contractimpl]\nimpl Contract {\n    pub fn generate_random_value(env: Env, max_val: u64) -> Result<u64, Error> {\n        if max_val == 0 {\n            Err(Error::MaxValZero)\n        } else {\n            let val = env.prng().u64_in_range(0..max_val);\n            Ok(val)\n        }\n    }\n}\n")),(0,a.kt)("h3",{id:"implementation"},"Implementation"),(0,a.kt)("p",null,"The detector's implementation can be found at ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/CoinFabrik/scout-soroban/tree/main/detectors/insufficiently-random-values"},"this link"),"."))}d.isMDXComponent=!0}}]);